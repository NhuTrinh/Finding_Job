import React, { useEffect, useState } from "react";
import { useLocation } from "react-router-dom";
import { Container, Row, Col, Card, Button } from "react-bootstrap";
import { useParams, useNavigate } from 'react-router-dom';

const CandidateDetails = () => {
    const location = useLocation();
    const [candidate, setCandidate] = useState(null);
    const navigate = useNavigate();

    useEffect(() => {
        const stateCandidate = location.state?.candidate;

        if (stateCandidate) {
            // C√≥ candidate trong state ‚Üí set v√† l∆∞u v√†o localStorage
            setCandidate(stateCandidate);
            localStorage.setItem("candidateData", JSON.stringify(stateCandidate));
        } else {
            // Kh√¥ng c√≥ trong state (reload) ‚Üí l·∫•y t·ª´ localStorage
            const storedCandidate = localStorage.getItem("candidateData");
            if (storedCandidate) {
                setCandidate(JSON.parse(storedCandidate));
            }
        }
    }, [location.state]);

    if (!candidate) {
        return <p>Kh√¥ng c√≥ d·ªØ li·ªáu ·ª©ng vi√™n.</p>;
    }
    const { accountId, profile, attachments } = candidate;

    const skills = candidate?.profile?.skills?.[0] || { coreSkills: [], softSkills: [] };

    console.log("coreSkill: ", skills.coreSkills);
    console.log("softSkills: ", skills.softSkills);

    return (
    <Container>
        <Button
            variant="link"
            className="mb-3 ps-0 text-success fw-bold"
            onClick={() => navigate('/employer/dashboard')}
        >
            ‚Üê Tr·ªü v·ªÅ Trang ch·ªß
        </Button>

        <Card className="p-4 shadow-lg rounded-4">
            {/* Row 1: Th√¥ng tin ·ª©ng vi√™n + Sidebar */}
            <Row>
                <Col md={8}>
                    <div className="p-3 border rounded bg-white">
                        <h2 className="mb-3 text-success">{accountId?.fullName}</h2>
                        <p><strong>Email:</strong> {accountId?.email}</p>
                        <p><strong>ƒêi·ªán tho·∫°i:</strong> {profile?.phoneNumber || 'Ch∆∞a c·∫≠p nh·∫≠t'}</p>
                        <p><strong>Ng√†y sinh:</strong> {profile?.birthDay ? new Date(profile.birthDay).toLocaleDateString() : 'Ch∆∞a c·∫≠p nh·∫≠t'}</p>
                        <p><strong>Linkedin:</strong> {profile?.link}</p>
                        <p><strong>ƒê·ªãa ch·ªâ:</strong> {
                            profile?.address
                                ? `${profile.address.line || ''}, ${profile.address.city || ''}, ${profile.address.country || ''}, ${profile.address.city || ''}`
                                : 'Ch∆∞a c·∫≠p nh·∫≠t'
                        }</p>
                        <p><strong>V·ªã tr√≠ mong mu·ªën:</strong> {profile?.jobTitle || 'Ch∆∞a c·∫≠p nh·∫≠t'}</p>
                    </div>
                </Col>

                <Col md={4} className="border-start ps-4">
                    <Card className="mb-3 p-3 text-center shadow-sm rounded-3 bg-light">
                        <Card.Img
                            variant="top"
                            src={profile.avatar || 'https://via.placeholder.com/150'}
                            className="mb-3 rounded"
                        />
                        <h6 className="fw-bold">üè† N∆°i l√†m vi·ªác mong mu·ªën</h6>
                        {attachments?.preferredWorkLocation?.length > 0 ? (
                            <ul className="text-start small">
                                {attachments.preferredWorkLocation.map((loc, index) => (
                                    <li key={index}>{loc}</li>
                                ))}
                            </ul>
                        ) : <p className="small">Ch∆∞a ch·ªçn ƒë·ªãa ƒëi·ªÉm.</p>}

                        <h6 className="mt-3 fw-bold">üìé File ƒë√≠nh k√®m</h6>
                        <p className="small">
                            {attachments?.uploadedAt
                                ? new Date(attachments.uploadedAt).toLocaleString()
                                : 'Kh√¥ng c√≥ file ƒë√≠nh k√®m'}
                        </p>
                    </Card>
                </Col>
            </Row>

            {/* Row 2: Gi·ªõi thi·ªáu b·∫£n th√¢n */}
            <Row className="mt-4">
                <Col>
                    <div className="mb-4 border-bottom pb-3">
                        <h5 className="mb-2 text-success">Gi·ªõi thi·ªáu b·∫£n th√¢n</h5>
                        <p>{profile?.aboutMe || 'Kh√¥ng c√≥ m√¥ t·∫£.'}</p>
                    </div>
                </Col>
            </Row>

            {/* Row 3: K·ªπ nƒÉng */}
            <Row>
                <Col>
                    <div className="mb-4 border-bottom pb-3">
                        <h5 className="mb-2 text-success">K·ªπ nƒÉng</h5>

                        <div className="mb-2">
                            <strong>Chuy√™n m√¥n:</strong>
                            <div className="mt-1">
                                {skills.coreSkills.length ? skills.coreSkills.map((skill, idx) => (
                                    <span key={idx} className="badge bg-success me-2">{skill}</span>
                                )) : <span className="text-muted">Ch∆∞a c·∫≠p nh·∫≠t</span>}
                            </div>
                        </div>

                        <div>
                            <strong>M·ªÅm:</strong>
                            <div className="mt-1">
                                {skills.softSkills.length ? skills.softSkills.map((skill, idx) => (
                                    <span key={idx} className="badge bg-info text-dark me-2">{skill}</span>
                                )) : <span className="text-muted">Ch∆∞a c·∫≠p nh·∫≠t</span>}
                            </div>
                        </div>
                    </div>
                </Col>
                </Row>
                
                <Row>
    <Col>
        <div className="mb-4 border-bottom pb-3">
            <h5 className="mb-2 text-success">Ng√¥n ng·ªØ</h5>

            {profile?.foreignLanguages?.length > 0 ? (
                <ul className="ps-3 mb-0">
                    {profile.foreignLanguages.map((lang, index) => (
                        <li key={index}>
                            {lang.language} - {lang.level}
                        </li>
                    ))}
                </ul>
            ) : (
                <p className="text-muted">Ch∆∞a c·∫≠p nh·∫≠t ng√¥n ng·ªØ.</p>
            )}
        </div>
    </Col>
</Row>

            {/* Row 4: Kinh nghi·ªám l√†m vi·ªác */}
            <Row>
                <Col>
                    <div className="mb-4 border-bottom pb-3">
                        <h5 className="mb-2 text-success">Kinh nghi·ªám l√†m vi·ªác</h5>
                        {profile?.workExperience?.length > 0 ? (
                            profile.workExperience.map((exp, index) => (
                                <div key={index} className="border rounded p-3 mb-3 shadow-sm">
                                    <h6 className="mb-1 text-primary">{exp.jobTitle}</h6>
                                    <p className="mb-1"><strong>C√¥ng ty:</strong> {exp.companyName}</p>
                                    <p className="mb-1">
                                        <strong>Th·ªùi gian:</strong> {new Date(exp.startDate).toLocaleDateString()} - {new Date(exp.endDate).toLocaleDateString()}
                                    </p>
                                    {exp.project && (
                                        <p className="mb-1"><strong>D·ª± √°n:</strong> {exp.project}</p>
                                    )}
                                    {exp.description && (
                                        <p className="mb-0"><strong>M√¥ t·∫£:</strong> {exp.description}</p>
                                    )}
                                </div>
                            ))
                        ) : <p>Ch∆∞a c√≥ kinh nghi·ªám l√†m vi·ªác.</p>}
                    </div>
                </Col>
            </Row>

            {/* Row 5: H·ªçc v·∫•n */}
            <Row>
    <Col md={8}>
        <div className="mb-4 border-bottom pb-3">
            <h5 className="mb-2 text-success">üéì H·ªçc v·∫•n</h5>
            {profile?.education?.length > 0 ? (
                profile.education.map((edu, index) => (
                    <div key={index} className="border rounded p-3 mb-3 shadow-sm">
                        <h6 className="mb-1 text-primary">{edu.schoolName}</h6>
                        <p className="mb-0"><strong>Ng√†nh:</strong> {edu.major}</p>
                        <strong>Th·ªùi gian:</strong> {new Date(edu.startDate).toLocaleDateString()} - {new Date(edu.endDate).toLocaleDateString()}
                    </div>
                ))
            ) : (
                <p className="text-muted">Ch∆∞a c·∫≠p nh·∫≠t h·ªçc v·∫•n.</p>
            )}
        </div>
    </Col>
                </Row>

                <Row>
    <Col>
        <div className="mb-4 border-bottom pb-3">
            <h5 className="mb-2 text-success">D·ª± √°n ti√™u bi·ªÉu</h5>
            {profile?.highlightProjects?.length > 0 ? (
                <ul className="ps-3 mb-0">
                    {profile.highlightProjects.map((proj, index) => (
                        <li key={index}>
                            <strong>{proj.name}</strong> ({new Date(proj.startDate).getFullYear()} - {new Date(proj.endDate).getFullYear()})<br />
                            {proj.description}<br />
                            {proj.projectUrl && (
                                <a href={proj.projectUrl} target="_blank" rel="noopener noreferrer">
                                    {proj.projectUrl}
                                </a>
                            )}
                        </li>
                    ))}
                </ul>
            ) : (
                <p className="text-muted">Ch∆∞a c·∫≠p nh·∫≠t d·ª± √°n.</p>
            )}
        </div>
    </Col>
                </Row>
                <Row>
    <Col>
        <div className="mb-4 border-bottom pb-3">
            <h5 className="mb-2 text-success">Ch·ª©ng ch·ªâ</h5>
            {profile?.certificates?.length > 0 ? (
                <ul className="ps-3 mb-0">
                    {profile.certificates.map((cert, index) => (
                        <li key={index}>
                            <strong>{cert.name}</strong> - {cert.organization} ({new Date(cert.issueDate).toLocaleDateString('vi-VN')})<br />
                            {cert.description}<br />
                            {cert.certificateUrl && (
                                <a href={cert.certificateUrl} target="_blank" rel="noopener noreferrer">
                                    {cert.certificateUrl}
                                </a>
                            )}
                        </li>
                    ))}
                </ul>
            ) : (
                <p className="text-muted">Ch∆∞a c·∫≠p nh·∫≠t ch·ª©ng ch·ªâ.</p>
            )}
        </div>
    </Col>
                </Row>
                <Row>
    <Col>
        <div className="mb-4 border-bottom pb-3">
            <h5 className="mb-2 text-success">Gi·∫£i th∆∞·ªüng</h5>
            {profile?.awards?.length > 0 ? (
                <ul className="ps-3 mb-0">
                    {profile.awards.map((award, index) => (
                        <li key={index}>
                            <strong>{award.name}</strong> - {award.organization} ({new Date(award.issueDate).toLocaleDateString('vi-VN')})<br />
                            {award.description}
                        </li>
                    ))}
                </ul>
            ) : (
                <p className="text-muted">Ch∆∞a c·∫≠p nh·∫≠t gi·∫£i th∆∞·ªüng.</p>
            )}
        </div>
    </Col>
</Row>
        </Card>
    </Container>
);
};

export default CandidateDetails;